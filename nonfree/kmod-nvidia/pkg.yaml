name: nonfree-kmod-nvidia
variant: scratch
shell: /toolchain/bin/bash
dependencies:
  - stage: kernel-build
steps:
  - sources:
    # {{ if eq .ARCH "aarch64" }} This in fact is YAML comment, but Go templating instruction is evaluated by bldr
      - url: https://download.nvidia.com/XFree86/Linux-aarch64/{{ .nvidia_driver_version }}/NVIDIA-Linux-aarch64-{{ .nvidia_driver_version }}.run
        destination: nvidia.run
        sha256: b8ce733043bf00edf6566a943b399cd391459bf973efa8cf49269099e654945a
        sha512: abb9d33b2cfa57be25d5395d5e9805d401b67375761cd07da0e78cc372d8f424c9a7129966967ed36b2123eafbb0fa99f478deb2c4b6a9d85764bdfb60c1139e
    # {{ else }} This in fact is YAML comment, but Go templating instruction is evaluated by bldr
      - url: https://download.nvidia.com/XFree86/Linux-x86_64/{{ .nvidia_driver_version }}/NVIDIA-Linux-x86_64-{{ .nvidia_driver_version }}.run
        destination: nvidia.run
        sha256: ae27a16a968c85503f5d161dda343c1602612b025f4aee15f92e2ea0acb784b1
        sha512: 90068122824322884ec8f3e4be2fe7f76bf07ee1163baf6da15d09ba3ff886e5c5ef72016509eef9f4af9d85f154ebbe051d5fb3af5e867f1f67f03af8068100
    # {{ end }} This in fact is YAML comment, but Go templating instruction is evaluated by bldr
    env:
      ARCH: {{ if eq .ARCH "aarch64"}}arm64{{ else if eq .ARCH "x86_64" }}x86_64{{ else }}unsupported{{ end }}
    cache: /src/build
    prepare:
      - |
        export PATH=/toolchain/bin:$PATH
        export GUESS_MD5_PATH=/toolchain/bin

        rm -f /dev/tty && ln -s /dev/stdout /dev/tty
        ln -s /toolchain/bin/echo /toolchain/bin/which

        /toolchain/bin/bash nvidia.run --extract-only
    build:
      - |
        cd NVIDIA-Linux-*/kernel

        make -j $(nproc) SYSSRC=/src SYSOUT=/src/build
    install:
      - |
        cd NVIDIA-Linux-*/kernel

        mkdir -p /rootfs/lib/modules/$(cat /src/build/include/config/kernel.release)/
        cp /src/build/modules.order /rootfs/lib/modules/$(cat /src/build/include/config/kernel.release)/
        cp /src/build/modules.builtin /rootfs/lib/modules/$(cat /src/build/include/config/kernel.release)/
        cp /src/build/modules.builtin.modinfo /rootfs/lib/modules/$(cat /src/build/include/config/kernel.release)/

        make -j $(nproc) modules_install SYSSRC=/src SYSOUT=/src/build DEPMOD=/toolchain/bin/depmod INSTALL_MOD_PATH=/rootfs INSTALL_MOD_DIR=extras INSTALL_MOD_STRIP=1
finalize:
  - from: /rootfs
    to: /
